{"version":3,"sources":["Games.js","Player.js","NavbarElem.js","Navbar.js","index.js"],"names":["darkTheme","createTheme","type","request","XMLHttpRequest","open","send","GameList","JSON","parse","responseText","Games","navigate","useNavigate","theme","Container","justify","id","xs","sm","cover","css","w","p","Body","Image","src","height","width","alt","Footer","blur","position","bgBlur","borderTop","bottom","zIndex","color","size","y","auto","bg","fill","filled","x","gap","Object","entries","map","i","Game","hoverable","animated","shadow","objectFit","wrap","b","flat","rounded","onClick","weight","transform","dict","title","style","display","background","border","top","right","left","overflow","CheckifGameExists","game","undefined","h1","Player","useSearchParams","get","document","body","margin","Nav","styled","nav","NavLink","Link","NavMenu","div","Navbar","to","rootElement","getElementById","ReactDOM","render","path","exact","element"],"mappings":"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","file":"static/js/main.6e7eb115.chunk.js","sourcesContent":["\r\nimport { Button, Grid, Text, Card, Row, createTheme, NextUIProvider, Spacer } from \"@nextui-org/react\";\r\nimport { Col } from '@nextui-org/react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Play } from 'react-iconly';\r\n\r\nconst darkTheme = createTheme({\r\n    type: 'dark'\r\n})\r\n\r\n// const list = [\r\n//     {\r\n//         title: 'fortnite',\r\n//         img: '/static/images/fortnite.jpg'\r\n//     },\r\n//     {\r\n//         title: 'Yakuza kiwami',\r\n//         img: '/static/images/kiwami.jpg'\r\n//     },\r\n//     {\r\n//         title: 'yakuza 0',\r\n//         img: '/static/images/y0.jpg'\r\n//     },\r\n//     {\r\n//         title: 'Super Mario 64',\r\n//         img: '/images/sm64cover.jpg'\r\n//     },\r\n//     {\r\n//         title: 'Riddle School',\r\n//         img: '/images/rs1.jpg'\r\n//     },\r\n//     {\r\n//         title: 'Riddle School 2',\r\n//         img: '/images/rs2.png'\r\n//     },\r\n//     {\r\n//         title: 'Riddle School 3',\r\n//         img: '/images/rs3.jpg'\r\n//     },\r\n//     {\r\n//         title: 'Riddle School 4',\r\n//         img: '/images/rs4.jpg'\r\n//     },\r\n//     {\r\n//         title: 'Riddle School 5',\r\n//         img: '/images/rs5.jpg'\r\n//     },\r\n//     {\r\n//         title: 'Riddle Transfer',\r\n//         img: '/images/rst.jpg'\r\n//     },\r\n//     {\r\n//         title: 'Riddle Transfer 2',\r\n//         img: '/images/rt2.jpg'\r\n//     },\r\n//     {\r\n//         title: 'Spider-Man (2000)',\r\n//         img: '/images/sm2000.jpg'\r\n//     },\r\n// ];\r\n\r\nvar request = new XMLHttpRequest();\r\nrequest.open(\"GET\", \"./ListOfGames.json\", false);\r\nrequest.send(null)\r\nvar GameList = JSON.parse(request.responseText)\r\n\r\nexport default function Games() {\r\n    const navigate = useNavigate();\r\n\r\n    function stuff() {\r\n    }\r\n    stuff()\r\n\r\n    return (\r\n        <NextUIProvider theme={darkTheme}>\r\n            <Grid.Container justify=\"center\" id=\"NewItem\">\r\n                <Grid xs={12} sm={7}>\r\n                    <Card cover css={{ w: '100%', p: 0 }}>\r\n                        <Card.Body>\r\n                            <Card.Image\r\n                                src='/images/sm64gameplay2.jpg'\r\n                                height={300}\r\n                                width=\"100%\"\r\n                                alt=\"Relaxing app background\"\r\n                            />\r\n                        </Card.Body>\r\n\r\n                        <Card.Footer\r\n                            blur\r\n                            css={{\r\n                                position: 'absolute',\r\n                                bgBlur: '#0f1114',\r\n                                borderTop: '$borderWeights$light solid $gray700',\r\n                                bottom: 0,\r\n                                zIndex: 1\r\n                            }}\r\n                        >\r\n                            <Row>\r\n                                <Col>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <Text color=\"#d1d1d1\" size={12}>\r\n                                                Recently Added\r\n                                            </Text>\r\n                                            <Spacer y={.4} />\r\n                                            <Text color=\"#d1d1d1\" size={16}>\r\n                                                Super Mario 64\r\n                                            </Text>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Col>\r\n                                <Col>\r\n                                    <Row justify=\"flex-end\">\r\n                                        <Button auto css={{ color: '#94f9f0', bg: '#000000' }}>\r\n                                            {<Play fill=\"currentColor\" filled />}\r\n                                            <Spacer x={0.2} />\r\n                                            Play\r\n                                        </Button>\r\n                                    </Row>\r\n                                </Col>\r\n                            </Row>\r\n                        </Card.Footer>\r\n\r\n                    </Card>\r\n                </Grid>\r\n            </Grid.Container>\r\n\r\n\r\n            {/* <div justify=\"center\">\r\n                <Card>\r\n                    <Card.Header css={{ position: 'absolute', zIndex: 1, top: 50 }}>\r\n                        <div>\r\n                            <Col>\r\n                                <Text\r\n                                    h1\r\n                                    size={60}\r\n                                    css={{\r\n                                        \"color\": \"white\",\r\n                                        \"-webkit-text-stroke-width\": \"3px\",\r\n                                        \"-webkit-text-stroke-color\": \"black\"\r\n                                    }}\r\n                                    weight=\"bold\"\r\n                                >\r\n                                    Recently Added\r\n                                </Text>\r\n                            </Col>\r\n                        </div>\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <Card.Image\r\n                            src='/images/sm64gameplay2.jpg'\r\n                            height=\"10px\"\r\n                            width=\"100%\"\r\n                            alt=\"Relaxing app background\"\r\n                            objectFit='cover'\r\n                        />\r\n                    </Card.Body>\r\n\r\n                </Card>\r\n            </div> */}\r\n\r\n            <Spacer y={1} />\r\n            <Grid.Container gap={2} justify=\"flex-start\">\r\n                {\r\n                    Object.entries(GameList).map(([Game], i) => (\r\n                        <Grid xs={1} sm={2.4} key={i}>\r\n                            <Card hoverable animated shadow>\r\n                                <Card.Body css={{ p: 0 }}>\r\n                                    <Card.Image\r\n                                        objectFit=\"scale-down\"\r\n                                        src={GameList[Game][\"CoverArt\"]}\r\n                                        width='100%'\r\n                                        height={140}\r\n                                        alt={GameList[Game][\"CoverArt\"]}\r\n                                    />\r\n                                </Card.Body>\r\n                                <Card.Footer justify=\"flex-end\" blur=\"true\">\r\n                                    <Row wrap='wrap' justify=\"space-between\">\r\n                                        <Text b>\r\n                                            {Game}\r\n                                        </Text>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <Row justify=\"flex-end\">\r\n                                                <Button flat auto rounded color=\"success\" onClick={() => { navigate(\"../Player?game=\" + Game) }}>\r\n                                                    <Text css={{ color: 'inherit' }} size={12} weight=\"bold\" transform=\"uppercase\">\r\n                                                        Play\r\n                                                    </Text>\r\n                                                </Button>\r\n                                            </Row>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Card.Footer>\r\n                            </Card>\r\n                        </Grid>\r\n                    ))\r\n                }\r\n            </Grid.Container >\r\n        </NextUIProvider >\r\n    );\r\n}\r\n","\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport { NextUIProvider, createTheme, Text } from '@nextui-org/react'\r\n\r\nconst darkTheme = createTheme({\r\n    type: 'dark'\r\n})\r\n\r\nvar dict = {\r\n    \"Riddle School\": function () {\r\n        return (\r\n            <iframe title=\"wip\" id=\"container\" style={{\r\n                display: \"block\",   /* iframes are inline by default */\r\n                position: \"fixed\",\r\n                background: \"#000\",\r\n                border: \"none\",\r\n                top: \"0\", right: \"0\",\r\n                bottom: \"0\", left: \"0\",\r\n                width: '100vw',\r\n                height: '100vh',\r\n                overflow: \"hidden\"\r\n            }} src=\"https://bunrum.github.io/webgames/Riddle School\">\r\n            </iframe>\r\n        )\r\n    },\r\n    \"Super Mario 64\": function () {\r\n        return (\r\n            <iframe title=\"wip\" id=\"container\" style={{\r\n                display: \"block\",   /* iframes are inline by default */\r\n                position: \"fixed\",\r\n                background: \"#000\",\r\n                border: \"none\",\r\n                top: \"0\", right: \"0\",\r\n                bottom: \"0\", left: \"0\",\r\n                width: '100vw',\r\n                height: '100vh',\r\n                overflow: \"hidden\"\r\n            }} src=\"https://sm64web.clambam10.repl.co/f.html\">\r\n            </iframe>\r\n        )\r\n    }\r\n};\r\n\r\nvar request = new XMLHttpRequest();\r\nrequest.open(\"GET\", \"./ListOFGames.json\", false);\r\nrequest.send(null)\r\nvar GameList = JSON.parse(request.responseText)\r\n\r\nfunction CheckifGameExists(game) {\r\n    if (GameList[game] === undefined && dict[game] === undefined) {\r\n        return (\r\n            <NextUIProvider theme={darkTheme}>\r\n                <Text h1\r\n                    style={{\r\n                        position: 'absolute', left: '50%', top: '50%',\r\n                        transform: 'translate(-50%, 350%)'\r\n                    }}> This game does not exist </Text>\r\n            </NextUIProvider>\r\n        )\r\n    }\r\n    if (GameList[game] !== undefined && dict[game] !== undefined) {\r\n        return (\r\n            <div>\r\n                {dict[game]()}\r\n            </div>\r\n        )\r\n    }\r\n    if (dict[game] === undefined && GameList[game] !== undefined) {\r\n        return (\r\n            <NextUIProvider theme={darkTheme}>\r\n                <Text h1\r\n                    style={{\r\n                        position: 'absolute', left: '50%', top: '50%',\r\n                        transform: 'translate(-50%, 170%)'\r\n                    }}> This game exists but there is no code for it </Text>\r\n            </NextUIProvider>\r\n        )\r\n    }\r\n}\r\n\r\nexport default function Player() {\r\n    let [searchParams] = useSearchParams();\r\n    let game = searchParams.get(\"game\")\r\n    document.body.style.margin = \"0\";\r\n    return (\r\n        <div>\r\n            {CheckifGameExists(game)}\r\n        </div>\r\n    );\r\n};","// import { FaBars } from \"react-icons/fa\";\r\nimport { NavLink as Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const Nav = styled.nav`\r\n  background: #161616;\r\n  opacity: 0.5;\r\n  height: 85px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 0.2rem calc((100vw - 1000px) / 2);\r\n  z-index: 12;\r\n  position: sticky;\r\n  top: 0;\r\n`;\r\n\r\nexport const NavLink = styled(Link)`\r\n  color: #808080;\r\n  display: flex;\r\n  align-items: center;\r\n  text-decoration: none;\r\n  padding: 0 1rem;\r\n  height: 100%;\r\n  transition: all 150ms ease;\r\n  font-weight: '700';\r\n  cursor: pointer;\r\n  &.active {\r\n    color: #4d4dff;\r\n  }\r\n`;\r\n\r\n// export const Bars = styled(FaBars)`\r\n//   display: none;\r\n//   color: #808080;\r\n//   @media screen and (max-width: 768px) {\r\n//     display: block;\r\n//     position: absolute;\r\n//     top: 0;\r\n//     right: 0;\r\n//     transform: translate(-100%, 75%);\r\n//     font-size: 1.8rem;\r\n//     cursor: pointer;\r\n//   }\r\n// `;\r\n\r\nexport const NavMenu = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-right: -24px;\r\n  /* Second Nav */\r\n  /* margin-right: 24px; */\r\n  /* Third Nav */\r\n  /* width: 100vw;\r\nwhite-space: nowrap; */\r\n  @media screen and (max-width: 768px) {\r\n    display: none;\r\n  }\r\n`;","\r\nimport { Nav, NavLink, NavMenu } from \"./NavbarElem\";\r\n// import { Input } from \"@nextui-org/react\";\r\n\r\n// var request = new XMLHttpRequest();\r\n// request.open(\"GET\", \"./ListOFGames.json\", false);\r\n// request.send(null)\r\n// var GameList = JSON.parse(request.responseText)\r\n// var SearchValue = ''\r\nconst Navbar = () => {\r\n  return (\r\n    <>\r\n      <Nav>\r\n        <NavMenu>\r\n          <NavLink to=\"/\">\r\n            Games\r\n          </NavLink>\r\n          <NavLink to=\"/Player\">\r\n            Player\r\n          </NavLink>\r\n          {/* <Input\r\n            clearable label=\"Search\" placeholder=\"  \" initialValue=\"\"\r\n            // onChange={event => {\r\n            //   SearchValue = event.target.value\r\n            //   Object.entries(GameList).map(([Game], i) => {\r\n            //     //console.log(SearchValue, (Game.indexOf(SearchValue) !=-1? true: false))\r\n            //     var ContainsSearch = Game.indexOf(SearchValue) !=-1? true: false\r\n            //     console.log(Game, ContainsSearch)\r\n            //   })\r\n            // }}\r\n          /> */}\r\n        </NavMenu>\r\n      </Nav>\r\n    </>\r\n  );\r\n};\r\nexport default Navbar;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport Games from './Games';\r\nimport Player from './Player';\r\nimport Navbar from './Navbar';\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(\r\n    <Router>\r\n      <Navbar css={{\r\n        \"position\": \"sticky\",\r\n        \"top\": \"0\"\r\n      }} />\r\n      <Routes>\r\n        <Route id=\"Games\" path='/' exact element={<Games />} />\r\n        <Route id=\"Player\" path='/Player' exact element={<Player />} />\r\n      </Routes>\r\n    </Router>,\r\n  rootElement\r\n);"],"sourceRoot":""}